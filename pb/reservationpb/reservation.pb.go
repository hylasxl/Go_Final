// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: api/proto/reservation.proto

package reservationpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BookFlightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     uint32 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	FlightId   uint32 `protobuf:"varint,2,opt,name=flightId,proto3" json:"flightId,omitempty"`
	SeatId     uint32 `protobuf:"varint,3,opt,name=seatId,proto3" json:"seatId,omitempty"`
	PassportId uint32 `protobuf:"varint,4,opt,name=passportId,proto3" json:"passportId,omitempty"`
}

func (x *BookFlightRequest) Reset() {
	*x = BookFlightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_reservation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookFlightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookFlightRequest) ProtoMessage() {}

func (x *BookFlightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_reservation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookFlightRequest.ProtoReflect.Descriptor instead.
func (*BookFlightRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_reservation_proto_rawDescGZIP(), []int{0}
}

func (x *BookFlightRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *BookFlightRequest) GetFlightId() uint32 {
	if x != nil {
		return x.FlightId
	}
	return 0
}

func (x *BookFlightRequest) GetSeatId() uint32 {
	if x != nil {
		return x.SeatId
	}
	return 0
}

func (x *BookFlightRequest) GetPassportId() uint32 {
	if x != nil {
		return x.PassportId
	}
	return 0
}

type BookFlightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReservationId        uint32                 `protobuf:"varint,1,opt,name=reservationId,proto3" json:"reservationId,omitempty"`
	SeatNumber           string                 `protobuf:"bytes,2,opt,name=seatNumber,proto3" json:"seatNumber,omitempty"`
	TicketNumber         string                 `protobuf:"bytes,3,opt,name=ticketNumber,proto3" json:"ticketNumber,omitempty"`
	Price                uint32                 `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`
	IssueDate            *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=issueDate,proto3" json:"issueDate,omitempty"`
	PassengerName        string                 `protobuf:"bytes,6,opt,name=passengerName,proto3" json:"passengerName,omitempty"`
	PassengerPhonenumber string                 `protobuf:"bytes,7,opt,name=passengerPhonenumber,proto3" json:"passengerPhonenumber,omitempty"`
	PassengerEmail       string                 `protobuf:"bytes,8,opt,name=passengerEmail,proto3" json:"passengerEmail,omitempty"`
	Error                string                 `protobuf:"bytes,9,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *BookFlightResponse) Reset() {
	*x = BookFlightResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_reservation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookFlightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookFlightResponse) ProtoMessage() {}

func (x *BookFlightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_reservation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookFlightResponse.ProtoReflect.Descriptor instead.
func (*BookFlightResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_reservation_proto_rawDescGZIP(), []int{1}
}

func (x *BookFlightResponse) GetReservationId() uint32 {
	if x != nil {
		return x.ReservationId
	}
	return 0
}

func (x *BookFlightResponse) GetSeatNumber() string {
	if x != nil {
		return x.SeatNumber
	}
	return ""
}

func (x *BookFlightResponse) GetTicketNumber() string {
	if x != nil {
		return x.TicketNumber
	}
	return ""
}

func (x *BookFlightResponse) GetPrice() uint32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *BookFlightResponse) GetIssueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.IssueDate
	}
	return nil
}

func (x *BookFlightResponse) GetPassengerName() string {
	if x != nil {
		return x.PassengerName
	}
	return ""
}

func (x *BookFlightResponse) GetPassengerPhonenumber() string {
	if x != nil {
		return x.PassengerPhonenumber
	}
	return ""
}

func (x *BookFlightResponse) GetPassengerEmail() string {
	if x != nil {
		return x.PassengerEmail
	}
	return ""
}

func (x *BookFlightResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTicketRequest) Reset() {
	*x = GetTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_reservation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTicketRequest) ProtoMessage() {}

func (x *GetTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_reservation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTicketRequest.ProtoReflect.Descriptor instead.
func (*GetTicketRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_reservation_proto_rawDescGZIP(), []int{2}
}

type GetTicketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tickets []*Ticket `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets,omitempty"`
	Error   string    `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetTicketResponse) Reset() {
	*x = GetTicketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_reservation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTicketResponse) ProtoMessage() {}

func (x *GetTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_reservation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTicketResponse.ProtoReflect.Descriptor instead.
func (*GetTicketResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_reservation_proto_rawDescGZIP(), []int{3}
}

func (x *GetTicketResponse) GetTickets() []*Ticket {
	if x != nil {
		return x.Tickets
	}
	return nil
}

func (x *GetTicketResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CancelTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   uint32 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	TicketId uint32 `protobuf:"varint,2,opt,name=ticketId,proto3" json:"ticketId,omitempty"`
}

func (x *CancelTicketRequest) Reset() {
	*x = CancelTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_reservation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTicketRequest) ProtoMessage() {}

func (x *CancelTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_reservation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTicketRequest.ProtoReflect.Descriptor instead.
func (*CancelTicketRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_reservation_proto_rawDescGZIP(), []int{4}
}

func (x *CancelTicketRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CancelTicketRequest) GetTicketId() uint32 {
	if x != nil {
		return x.TicketId
	}
	return 0
}

type CancelTicketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CancelTicketResponse) Reset() {
	*x = CancelTicketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_reservation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTicketResponse) ProtoMessage() {}

func (x *CancelTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_reservation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTicketResponse.ProtoReflect.Descriptor instead.
func (*CancelTicketResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_reservation_proto_rawDescGZIP(), []int{5}
}

func (x *CancelTicketResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetUserTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint32 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetUserTicketRequest) Reset() {
	*x = GetUserTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_reservation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTicketRequest) ProtoMessage() {}

func (x *GetUserTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_reservation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTicketRequest.ProtoReflect.Descriptor instead.
func (*GetUserTicketRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_reservation_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserTicketRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserTicketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tickets []*Ticket `protobuf:"bytes,1,rep,name=Tickets,proto3" json:"Tickets,omitempty"`
	Error   string    `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetUserTicketResponse) Reset() {
	*x = GetUserTicketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_reservation_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTicketResponse) ProtoMessage() {}

func (x *GetUserTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_reservation_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTicketResponse.ProtoReflect.Descriptor instead.
func (*GetUserTicketResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_reservation_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserTicketResponse) GetTickets() []*Ticket {
	if x != nil {
		return x.Tickets
	}
	return nil
}

func (x *GetUserTicketResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Ticket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reservation  *TReservation          `protobuf:"bytes,1,opt,name=Reservation,proto3" json:"Reservation,omitempty"`
	Seat         *TSeat                 `protobuf:"bytes,2,opt,name=Seat,proto3" json:"Seat,omitempty"`
	Flight       *TFlight               `protobuf:"bytes,3,opt,name=Flight,proto3" json:"Flight,omitempty"`
	TicketNumber string                 `protobuf:"bytes,4,opt,name=TicketNumber,proto3" json:"TicketNumber,omitempty"`
	Price        float32                `protobuf:"fixed32,5,opt,name=Price,proto3" json:"Price,omitempty"`
	TicketID     uint32                 `protobuf:"varint,6,opt,name=TicketID,proto3" json:"TicketID,omitempty"`
	IssueDate    *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=IssueDate,proto3" json:"IssueDate,omitempty"`
	UserID       uint32                 `protobuf:"varint,8,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *Ticket) Reset() {
	*x = Ticket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_reservation_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ticket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticket) ProtoMessage() {}

func (x *Ticket) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_reservation_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticket.ProtoReflect.Descriptor instead.
func (*Ticket) Descriptor() ([]byte, []int) {
	return file_api_proto_reservation_proto_rawDescGZIP(), []int{8}
}

func (x *Ticket) GetReservation() *TReservation {
	if x != nil {
		return x.Reservation
	}
	return nil
}

func (x *Ticket) GetSeat() *TSeat {
	if x != nil {
		return x.Seat
	}
	return nil
}

func (x *Ticket) GetFlight() *TFlight {
	if x != nil {
		return x.Flight
	}
	return nil
}

func (x *Ticket) GetTicketNumber() string {
	if x != nil {
		return x.TicketNumber
	}
	return ""
}

func (x *Ticket) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Ticket) GetTicketID() uint32 {
	if x != nil {
		return x.TicketID
	}
	return 0
}

func (x *Ticket) GetIssueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.IssueDate
	}
	return nil
}

func (x *Ticket) GetUserID() uint32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type TReservation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                uint32                 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	ReservationDate   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=ReservationDate,proto3" json:"ReservationDate,omitempty"`
	ReservationStatus string                 `protobuf:"bytes,3,opt,name=ReservationStatus,proto3" json:"ReservationStatus,omitempty"`
	PassportID        int32                  `protobuf:"varint,4,opt,name=PassportID,proto3" json:"PassportID,omitempty"`
}

func (x *TReservation) Reset() {
	*x = TReservation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_reservation_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TReservation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TReservation) ProtoMessage() {}

func (x *TReservation) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_reservation_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TReservation.ProtoReflect.Descriptor instead.
func (*TReservation) Descriptor() ([]byte, []int) {
	return file_api_proto_reservation_proto_rawDescGZIP(), []int{9}
}

func (x *TReservation) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *TReservation) GetReservationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ReservationDate
	}
	return nil
}

func (x *TReservation) GetReservationStatus() string {
	if x != nil {
		return x.ReservationStatus
	}
	return ""
}

func (x *TReservation) GetPassportID() int32 {
	if x != nil {
		return x.PassportID
	}
	return 0
}

type TSeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	SeatNumber string `protobuf:"bytes,2,opt,name=SeatNumber,proto3" json:"SeatNumber,omitempty"`
	SeatClass  string `protobuf:"bytes,3,opt,name=SeatClass,proto3" json:"SeatClass,omitempty"`
}

func (x *TSeat) Reset() {
	*x = TSeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_reservation_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSeat) ProtoMessage() {}

func (x *TSeat) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_reservation_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSeat.ProtoReflect.Descriptor instead.
func (*TSeat) Descriptor() ([]byte, []int) {
	return file_api_proto_reservation_proto_rawDescGZIP(), []int{10}
}

func (x *TSeat) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *TSeat) GetSeatNumber() string {
	if x != nil {
		return x.SeatNumber
	}
	return ""
}

func (x *TSeat) GetSeatClass() string {
	if x != nil {
		return x.SeatClass
	}
	return ""
}

type TFlight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlightNumber         string                 `protobuf:"bytes,1,opt,name=FlightNumber,proto3" json:"FlightNumber,omitempty"`
	DepartureAirport     *TAirport              `protobuf:"bytes,2,opt,name=DepartureAirport,proto3" json:"DepartureAirport,omitempty"`
	ArrivalAirport       *TAirport              `protobuf:"bytes,3,opt,name=ArrivalAirport,proto3" json:"ArrivalAirport,omitempty"`
	DepartureTime        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=DepartureTime,proto3" json:"DepartureTime,omitempty"`
	ArrivalTime          *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=ArrivalTime,proto3" json:"ArrivalTime,omitempty"`
	AvailableSeats       uint32                 `protobuf:"varint,6,opt,name=AvailableSeats,proto3" json:"AvailableSeats,omitempty"`
	Duration             uint32                 `protobuf:"varint,7,opt,name=Duration,proto3" json:"Duration,omitempty"`
	Status               string                 `protobuf:"bytes,8,opt,name=Status,proto3" json:"Status,omitempty"`
	UpdatedDepartureTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=UpdatedDepartureTime,proto3" json:"UpdatedDepartureTime,omitempty"`
	UpdatedArrivalTime   *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=UpdatedArrivalTime,proto3" json:"UpdatedArrivalTime,omitempty"`
	Reason               string                 `protobuf:"bytes,11,opt,name=Reason,proto3" json:"Reason,omitempty"`
	ID                   uint32                 `protobuf:"varint,12,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *TFlight) Reset() {
	*x = TFlight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_reservation_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TFlight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TFlight) ProtoMessage() {}

func (x *TFlight) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_reservation_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TFlight.ProtoReflect.Descriptor instead.
func (*TFlight) Descriptor() ([]byte, []int) {
	return file_api_proto_reservation_proto_rawDescGZIP(), []int{11}
}

func (x *TFlight) GetFlightNumber() string {
	if x != nil {
		return x.FlightNumber
	}
	return ""
}

func (x *TFlight) GetDepartureAirport() *TAirport {
	if x != nil {
		return x.DepartureAirport
	}
	return nil
}

func (x *TFlight) GetArrivalAirport() *TAirport {
	if x != nil {
		return x.ArrivalAirport
	}
	return nil
}

func (x *TFlight) GetDepartureTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DepartureTime
	}
	return nil
}

func (x *TFlight) GetArrivalTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ArrivalTime
	}
	return nil
}

func (x *TFlight) GetAvailableSeats() uint32 {
	if x != nil {
		return x.AvailableSeats
	}
	return 0
}

func (x *TFlight) GetDuration() uint32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *TFlight) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TFlight) GetUpdatedDepartureTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedDepartureTime
	}
	return nil
}

func (x *TFlight) GetUpdatedArrivalTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedArrivalTime
	}
	return nil
}

func (x *TFlight) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *TFlight) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type TAirport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AirportCode string `protobuf:"bytes,1,opt,name=airportCode,proto3" json:"airportCode,omitempty"`
	AirportName string `protobuf:"bytes,2,opt,name=airportName,proto3" json:"airportName,omitempty"`
	Country     string `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	City        string `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
	Id          string `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TAirport) Reset() {
	*x = TAirport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_reservation_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TAirport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TAirport) ProtoMessage() {}

func (x *TAirport) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_reservation_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TAirport.ProtoReflect.Descriptor instead.
func (*TAirport) Descriptor() ([]byte, []int) {
	return file_api_proto_reservation_proto_rawDescGZIP(), []int{12}
}

func (x *TAirport) GetAirportCode() string {
	if x != nil {
		return x.AirportCode
	}
	return ""
}

func (x *TAirport) GetAirportName() string {
	if x != nil {
		return x.AirportName
	}
	return ""
}

func (x *TAirport) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *TAirport) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *TAirport) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_api_proto_reservation_proto protoreflect.FileDescriptor

var file_api_proto_reservation_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7f, 0x0a, 0x11, 0x42, 0x6f, 0x6f, 0x6b, 0x46, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x65, 0x61, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73,
	0x65, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x49, 0x64, 0x22, 0xe6, 0x02, 0x0a, 0x12, 0x42, 0x6f, 0x6f, 0x6b, 0x46, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x09,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70,
	0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x14,
	0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x61, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x12,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x51, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x49, 0x0a, 0x13, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64,
	0x22, 0x2c, 0x0a, 0x14, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x2e,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x55,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x07, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x07, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xae, 0x02, 0x0a, 0x06, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x34, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x54, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x04, 0x53, 0x65, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x54, 0x53, 0x65, 0x61,
	0x74, 0x52, 0x04, 0x53, 0x65, 0x61, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x46, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x54,
	0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x06, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x09, 0x49, 0x73, 0x73, 0x75, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x49, 0x73, 0x73, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0xb2, 0x01, 0x0a, 0x0c, 0x54, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x44, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a,
	0x11, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x50,
	0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x50, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x44, 0x22, 0x55, 0x0a, 0x05, 0x54,
	0x53, 0x65, 0x61, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x61, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x61, 0x74, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x61, 0x74, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x22, 0xc1, 0x04, 0x0a, 0x07, 0x54, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x3a, 0x0a, 0x10, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x41,
	0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x54, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x10, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x36,
	0x0a, 0x0e, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x54, 0x41,
	0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x0e, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x41,
	0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x40, 0x0a, 0x0d, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x44, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x41, 0x72, 0x72, 0x69,
	0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x41, 0x72, 0x72, 0x69, 0x76,
	0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x74, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x4e, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x14, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x72, 0x72,
	0x69, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x22, 0x8c, 0x01, 0x0a, 0x08, 0x54, 0x41, 0x69, 0x72, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x69, 0x72, 0x70, 0x6f, 0x72,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x69, 0x72, 0x70,
	0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x32, 0xa6, 0x02, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x0a,
	0x42, 0x6f, 0x6f, 0x6b, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x17, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x46,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a,
	0x0c, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x19, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x1a, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3d, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x16, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x10,
	0x5a, 0x0e, 0x2f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_reservation_proto_rawDescOnce sync.Once
	file_api_proto_reservation_proto_rawDescData = file_api_proto_reservation_proto_rawDesc
)

func file_api_proto_reservation_proto_rawDescGZIP() []byte {
	file_api_proto_reservation_proto_rawDescOnce.Do(func() {
		file_api_proto_reservation_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_reservation_proto_rawDescData)
	})
	return file_api_proto_reservation_proto_rawDescData
}

var file_api_proto_reservation_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_api_proto_reservation_proto_goTypes = []any{
	(*BookFlightRequest)(nil),     // 0: auth.BookFlightRequest
	(*BookFlightResponse)(nil),    // 1: auth.BookFlightResponse
	(*GetTicketRequest)(nil),      // 2: auth.GetTicketRequest
	(*GetTicketResponse)(nil),     // 3: auth.GetTicketResponse
	(*CancelTicketRequest)(nil),   // 4: auth.CancelTicketRequest
	(*CancelTicketResponse)(nil),  // 5: auth.CancelTicketResponse
	(*GetUserTicketRequest)(nil),  // 6: auth.GetUserTicketRequest
	(*GetUserTicketResponse)(nil), // 7: auth.GetUserTicketResponse
	(*Ticket)(nil),                // 8: auth.Ticket
	(*TReservation)(nil),          // 9: auth.TReservation
	(*TSeat)(nil),                 // 10: auth.TSeat
	(*TFlight)(nil),               // 11: auth.TFlight
	(*TAirport)(nil),              // 12: auth.TAirport
	(*timestamppb.Timestamp)(nil), // 13: google.protobuf.Timestamp
}
var file_api_proto_reservation_proto_depIdxs = []int32{
	13, // 0: auth.BookFlightResponse.issueDate:type_name -> google.protobuf.Timestamp
	8,  // 1: auth.GetTicketResponse.tickets:type_name -> auth.Ticket
	8,  // 2: auth.GetUserTicketResponse.Tickets:type_name -> auth.Ticket
	9,  // 3: auth.Ticket.Reservation:type_name -> auth.TReservation
	10, // 4: auth.Ticket.Seat:type_name -> auth.TSeat
	11, // 5: auth.Ticket.Flight:type_name -> auth.TFlight
	13, // 6: auth.Ticket.IssueDate:type_name -> google.protobuf.Timestamp
	13, // 7: auth.TReservation.ReservationDate:type_name -> google.protobuf.Timestamp
	12, // 8: auth.TFlight.DepartureAirport:type_name -> auth.TAirport
	12, // 9: auth.TFlight.ArrivalAirport:type_name -> auth.TAirport
	13, // 10: auth.TFlight.DepartureTime:type_name -> google.protobuf.Timestamp
	13, // 11: auth.TFlight.ArrivalTime:type_name -> google.protobuf.Timestamp
	13, // 12: auth.TFlight.UpdatedDepartureTime:type_name -> google.protobuf.Timestamp
	13, // 13: auth.TFlight.UpdatedArrivalTime:type_name -> google.protobuf.Timestamp
	0,  // 14: auth.ReservationService.BookFlight:input_type -> auth.BookFlightRequest
	4,  // 15: auth.ReservationService.CancelTicket:input_type -> auth.CancelTicketRequest
	6,  // 16: auth.ReservationService.GetUserTickets:input_type -> auth.GetUserTicketRequest
	2,  // 17: auth.ReservationService.GetTickets:input_type -> auth.GetTicketRequest
	1,  // 18: auth.ReservationService.BookFlight:output_type -> auth.BookFlightResponse
	5,  // 19: auth.ReservationService.CancelTicket:output_type -> auth.CancelTicketResponse
	7,  // 20: auth.ReservationService.GetUserTickets:output_type -> auth.GetUserTicketResponse
	3,  // 21: auth.ReservationService.GetTickets:output_type -> auth.GetTicketResponse
	18, // [18:22] is the sub-list for method output_type
	14, // [14:18] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_api_proto_reservation_proto_init() }
func file_api_proto_reservation_proto_init() {
	if File_api_proto_reservation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_reservation_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*BookFlightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_reservation_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*BookFlightResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_reservation_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_reservation_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetTicketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_reservation_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CancelTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_reservation_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CancelTicketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_reservation_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_reservation_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserTicketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_reservation_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Ticket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_reservation_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*TReservation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_reservation_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*TSeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_reservation_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*TFlight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_reservation_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*TAirport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_reservation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_reservation_proto_goTypes,
		DependencyIndexes: file_api_proto_reservation_proto_depIdxs,
		MessageInfos:      file_api_proto_reservation_proto_msgTypes,
	}.Build()
	File_api_proto_reservation_proto = out.File
	file_api_proto_reservation_proto_rawDesc = nil
	file_api_proto_reservation_proto_goTypes = nil
	file_api_proto_reservation_proto_depIdxs = nil
}

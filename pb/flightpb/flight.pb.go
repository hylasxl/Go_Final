// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: api/proto/flight.proto

package flightpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetFlightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetFlightRequest) Reset() {
	*x = GetFlightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_flight_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFlightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlightRequest) ProtoMessage() {}

func (x *GetFlightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_flight_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFlightRequest.ProtoReflect.Descriptor instead.
func (*GetFlightRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_flight_proto_rawDescGZIP(), []int{0}
}

type GetFlightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flights []*RescheduleFlightResponse `protobuf:"bytes,1,rep,name=flights,proto3" json:"flights,omitempty"`
	Error   string                      `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetFlightResponse) Reset() {
	*x = GetFlightResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_flight_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFlightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlightResponse) ProtoMessage() {}

func (x *GetFlightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_flight_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFlightResponse.ProtoReflect.Descriptor instead.
func (*GetFlightResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_flight_proto_rawDescGZIP(), []int{1}
}

func (x *GetFlightResponse) GetFlights() []*RescheduleFlightResponse {
	if x != nil {
		return x.Flights
	}
	return nil
}

func (x *GetFlightResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetFlightSeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlightID uint32 `protobuf:"varint,1,opt,name=FlightID,proto3" json:"FlightID,omitempty"`
}

func (x *GetFlightSeatRequest) Reset() {
	*x = GetFlightSeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_flight_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFlightSeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlightSeatRequest) ProtoMessage() {}

func (x *GetFlightSeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_flight_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFlightSeatRequest.ProtoReflect.Descriptor instead.
func (*GetFlightSeatRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_flight_proto_rawDescGZIP(), []int{2}
}

func (x *GetFlightSeatRequest) GetFlightID() uint32 {
	if x != nil {
		return x.FlightID
	}
	return 0
}

type GetFlightSeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seats []*SeatF `protobuf:"bytes,1,rep,name=Seats,proto3" json:"Seats,omitempty"`
	Error string   `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *GetFlightSeatResponse) Reset() {
	*x = GetFlightSeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_flight_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFlightSeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlightSeatResponse) ProtoMessage() {}

func (x *GetFlightSeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_flight_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFlightSeatResponse.ProtoReflect.Descriptor instead.
func (*GetFlightSeatResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_flight_proto_rawDescGZIP(), []int{3}
}

func (x *GetFlightSeatResponse) GetSeats() []*SeatF {
	if x != nil {
		return x.Seats
	}
	return nil
}

func (x *GetFlightSeatResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type SeatF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatNumber  string  `protobuf:"bytes,1,opt,name=SeatNumber,proto3" json:"SeatNumber,omitempty"`
	SeatClass   string  `protobuf:"bytes,2,opt,name=SeatClass,proto3" json:"SeatClass,omitempty"`
	IsAvailable bool    `protobuf:"varint,3,opt,name=IsAvailable,proto3" json:"IsAvailable,omitempty"`
	Price       float64 `protobuf:"fixed64,4,opt,name=Price,proto3" json:"Price,omitempty"`
	ID          uint32  `protobuf:"varint,5,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *SeatF) Reset() {
	*x = SeatF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_flight_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeatF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeatF) ProtoMessage() {}

func (x *SeatF) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_flight_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeatF.ProtoReflect.Descriptor instead.
func (*SeatF) Descriptor() ([]byte, []int) {
	return file_api_proto_flight_proto_rawDescGZIP(), []int{4}
}

func (x *SeatF) GetSeatNumber() string {
	if x != nil {
		return x.SeatNumber
	}
	return ""
}

func (x *SeatF) GetSeatClass() string {
	if x != nil {
		return x.SeatClass
	}
	return ""
}

func (x *SeatF) GetIsAvailable() bool {
	if x != nil {
		return x.IsAvailable
	}
	return false
}

func (x *SeatF) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SeatF) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type CreateFlightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepartureAirportID uint32                 `protobuf:"varint,1,opt,name=DepartureAirportID,proto3" json:"DepartureAirportID,omitempty"`
	ArrivalAirportID   uint32                 `protobuf:"varint,2,opt,name=ArrivalAirportID,proto3" json:"ArrivalAirportID,omitempty"`
	DepartureTime      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=DepartureTime,proto3" json:"DepartureTime,omitempty"`
	ArrivalTime        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=ArrivalTime,proto3" json:"ArrivalTime,omitempty"`
	AvailableSeats     uint32                 `protobuf:"varint,5,opt,name=AvailableSeats,proto3" json:"AvailableSeats,omitempty"`
	AirlineID          uint32                 `protobuf:"varint,6,opt,name=AirlineID,proto3" json:"AirlineID,omitempty"`
}

func (x *CreateFlightRequest) Reset() {
	*x = CreateFlightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_flight_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFlightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFlightRequest) ProtoMessage() {}

func (x *CreateFlightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_flight_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFlightRequest.ProtoReflect.Descriptor instead.
func (*CreateFlightRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_flight_proto_rawDescGZIP(), []int{5}
}

func (x *CreateFlightRequest) GetDepartureAirportID() uint32 {
	if x != nil {
		return x.DepartureAirportID
	}
	return 0
}

func (x *CreateFlightRequest) GetArrivalAirportID() uint32 {
	if x != nil {
		return x.ArrivalAirportID
	}
	return 0
}

func (x *CreateFlightRequest) GetDepartureTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DepartureTime
	}
	return nil
}

func (x *CreateFlightRequest) GetArrivalTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ArrivalTime
	}
	return nil
}

func (x *CreateFlightRequest) GetAvailableSeats() uint32 {
	if x != nil {
		return x.AvailableSeats
	}
	return 0
}

func (x *CreateFlightRequest) GetAirlineID() uint32 {
	if x != nil {
		return x.AirlineID
	}
	return 0
}

type CreateFlightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlightNumber     string                 `protobuf:"bytes,1,opt,name=FlightNumber,proto3" json:"FlightNumber,omitempty"`
	DepartureAirport *AirportF              `protobuf:"bytes,2,opt,name=DepartureAirport,proto3" json:"DepartureAirport,omitempty"`
	ArrivalAirport   *AirportF              `protobuf:"bytes,3,opt,name=ArrivalAirport,proto3" json:"ArrivalAirport,omitempty"`
	DepartureTime    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=DepartureTime,proto3" json:"DepartureTime,omitempty"`
	ArrivalTime      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=ArrivalTime,proto3" json:"ArrivalTime,omitempty"`
	AvailableSeats   uint32                 `protobuf:"varint,6,opt,name=AvailableSeats,proto3" json:"AvailableSeats,omitempty"`
	Duration         uint32                 `protobuf:"varint,7,opt,name=Duration,proto3" json:"Duration,omitempty"`
	Status           string                 `protobuf:"bytes,8,opt,name=Status,proto3" json:"Status,omitempty"`
	Airline          *AirlineF              `protobuf:"bytes,9,opt,name=Airline,proto3" json:"Airline,omitempty"`
	Error            string                 `protobuf:"bytes,10,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *CreateFlightResponse) Reset() {
	*x = CreateFlightResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_flight_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFlightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFlightResponse) ProtoMessage() {}

func (x *CreateFlightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_flight_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFlightResponse.ProtoReflect.Descriptor instead.
func (*CreateFlightResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_flight_proto_rawDescGZIP(), []int{6}
}

func (x *CreateFlightResponse) GetFlightNumber() string {
	if x != nil {
		return x.FlightNumber
	}
	return ""
}

func (x *CreateFlightResponse) GetDepartureAirport() *AirportF {
	if x != nil {
		return x.DepartureAirport
	}
	return nil
}

func (x *CreateFlightResponse) GetArrivalAirport() *AirportF {
	if x != nil {
		return x.ArrivalAirport
	}
	return nil
}

func (x *CreateFlightResponse) GetDepartureTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DepartureTime
	}
	return nil
}

func (x *CreateFlightResponse) GetArrivalTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ArrivalTime
	}
	return nil
}

func (x *CreateFlightResponse) GetAvailableSeats() uint32 {
	if x != nil {
		return x.AvailableSeats
	}
	return 0
}

func (x *CreateFlightResponse) GetDuration() uint32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *CreateFlightResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateFlightResponse) GetAirline() *AirlineF {
	if x != nil {
		return x.Airline
	}
	return nil
}

func (x *CreateFlightResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type AirportF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AirportCode string `protobuf:"bytes,1,opt,name=AirportCode,proto3" json:"AirportCode,omitempty"`
	AirportName string `protobuf:"bytes,2,opt,name=AirportName,proto3" json:"AirportName,omitempty"`
	Country     string `protobuf:"bytes,3,opt,name=Country,proto3" json:"Country,omitempty"`
	City        string `protobuf:"bytes,4,opt,name=City,proto3" json:"City,omitempty"`
}

func (x *AirportF) Reset() {
	*x = AirportF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_flight_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AirportF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AirportF) ProtoMessage() {}

func (x *AirportF) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_flight_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AirportF.ProtoReflect.Descriptor instead.
func (*AirportF) Descriptor() ([]byte, []int) {
	return file_api_proto_flight_proto_rawDescGZIP(), []int{7}
}

func (x *AirportF) GetAirportCode() string {
	if x != nil {
		return x.AirportCode
	}
	return ""
}

func (x *AirportF) GetAirportName() string {
	if x != nil {
		return x.AirportName
	}
	return ""
}

func (x *AirportF) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *AirportF) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

type RescheduleFlightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlightID             uint32                 `protobuf:"varint,1,opt,name=FlightID,proto3" json:"FlightID,omitempty"`
	UpdatedDepartureTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=UpdatedDepartureTime,proto3" json:"UpdatedDepartureTime,omitempty"`
	UpdatedArrivalTime   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=UpdatedArrivalTime,proto3" json:"UpdatedArrivalTime,omitempty"`
	Reason               string                 `protobuf:"bytes,4,opt,name=Reason,proto3" json:"Reason,omitempty"`
}

func (x *RescheduleFlightRequest) Reset() {
	*x = RescheduleFlightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_flight_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RescheduleFlightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RescheduleFlightRequest) ProtoMessage() {}

func (x *RescheduleFlightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_flight_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RescheduleFlightRequest.ProtoReflect.Descriptor instead.
func (*RescheduleFlightRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_flight_proto_rawDescGZIP(), []int{8}
}

func (x *RescheduleFlightRequest) GetFlightID() uint32 {
	if x != nil {
		return x.FlightID
	}
	return 0
}

func (x *RescheduleFlightRequest) GetUpdatedDepartureTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedDepartureTime
	}
	return nil
}

func (x *RescheduleFlightRequest) GetUpdatedArrivalTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedArrivalTime
	}
	return nil
}

func (x *RescheduleFlightRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type RescheduleFlightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlightNumber         string                 `protobuf:"bytes,1,opt,name=FlightNumber,proto3" json:"FlightNumber,omitempty"`
	DepartureAirport     *AirportF              `protobuf:"bytes,2,opt,name=DepartureAirport,proto3" json:"DepartureAirport,omitempty"`
	ArrivalAirport       *AirportF              `protobuf:"bytes,3,opt,name=ArrivalAirport,proto3" json:"ArrivalAirport,omitempty"`
	DepartureTime        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=DepartureTime,proto3" json:"DepartureTime,omitempty"`
	ArrivalTime          *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=ArrivalTime,proto3" json:"ArrivalTime,omitempty"`
	AvailableSeats       uint32                 `protobuf:"varint,6,opt,name=AvailableSeats,proto3" json:"AvailableSeats,omitempty"`
	Duration             uint32                 `protobuf:"varint,7,opt,name=Duration,proto3" json:"Duration,omitempty"`
	Status               string                 `protobuf:"bytes,8,opt,name=Status,proto3" json:"Status,omitempty"`
	UpdatedDepartureTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=UpdatedDepartureTime,proto3" json:"UpdatedDepartureTime,omitempty"`
	UpdatedArrivalTime   *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=UpdatedArrivalTime,proto3" json:"UpdatedArrivalTime,omitempty"`
	Reason               string                 `protobuf:"bytes,11,opt,name=Reason,proto3" json:"Reason,omitempty"`
	Airline              *AirlineF              `protobuf:"bytes,12,opt,name=Airline,proto3" json:"Airline,omitempty"`
	Error                string                 `protobuf:"bytes,13,opt,name=Error,proto3" json:"Error,omitempty"`
	ID                   uint32                 `protobuf:"varint,14,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *RescheduleFlightResponse) Reset() {
	*x = RescheduleFlightResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_flight_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RescheduleFlightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RescheduleFlightResponse) ProtoMessage() {}

func (x *RescheduleFlightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_flight_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RescheduleFlightResponse.ProtoReflect.Descriptor instead.
func (*RescheduleFlightResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_flight_proto_rawDescGZIP(), []int{9}
}

func (x *RescheduleFlightResponse) GetFlightNumber() string {
	if x != nil {
		return x.FlightNumber
	}
	return ""
}

func (x *RescheduleFlightResponse) GetDepartureAirport() *AirportF {
	if x != nil {
		return x.DepartureAirport
	}
	return nil
}

func (x *RescheduleFlightResponse) GetArrivalAirport() *AirportF {
	if x != nil {
		return x.ArrivalAirport
	}
	return nil
}

func (x *RescheduleFlightResponse) GetDepartureTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DepartureTime
	}
	return nil
}

func (x *RescheduleFlightResponse) GetArrivalTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ArrivalTime
	}
	return nil
}

func (x *RescheduleFlightResponse) GetAvailableSeats() uint32 {
	if x != nil {
		return x.AvailableSeats
	}
	return 0
}

func (x *RescheduleFlightResponse) GetDuration() uint32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *RescheduleFlightResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RescheduleFlightResponse) GetUpdatedDepartureTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedDepartureTime
	}
	return nil
}

func (x *RescheduleFlightResponse) GetUpdatedArrivalTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedArrivalTime
	}
	return nil
}

func (x *RescheduleFlightResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *RescheduleFlightResponse) GetAirline() *AirlineF {
	if x != nil {
		return x.Airline
	}
	return nil
}

func (x *RescheduleFlightResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *RescheduleFlightResponse) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type AirlineF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AirlineCode string `protobuf:"bytes,1,opt,name=AirlineCode,proto3" json:"AirlineCode,omitempty"`
	AirlineName string `protobuf:"bytes,2,opt,name=AirlineName,proto3" json:"AirlineName,omitempty"`
	Country     string `protobuf:"bytes,3,opt,name=Country,proto3" json:"Country,omitempty"`
}

func (x *AirlineF) Reset() {
	*x = AirlineF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_flight_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AirlineF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AirlineF) ProtoMessage() {}

func (x *AirlineF) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_flight_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AirlineF.ProtoReflect.Descriptor instead.
func (*AirlineF) Descriptor() ([]byte, []int) {
	return file_api_proto_flight_proto_rawDescGZIP(), []int{10}
}

func (x *AirlineF) GetAirlineCode() string {
	if x != nil {
		return x.AirlineCode
	}
	return ""
}

func (x *AirlineF) GetAirlineName() string {
	if x != nil {
		return x.AirlineName
	}
	return ""
}

func (x *AirlineF) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

var File_api_proto_flight_proto protoreflect.FileDescriptor

var file_api_proto_flight_proto_rawDesc = []byte{
	0x0a, 0x16, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x61, 0x75, 0x74, 0x68, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x63, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x66, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x52, 0x65, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x66, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x32, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x44, 0x22, 0x50, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x53, 0x65, 0x61, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x53, 0x65, 0x61, 0x74,
	0x46, 0x52, 0x05, 0x53, 0x65, 0x61, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x8d,
	0x01, 0x0a, 0x05, 0x53, 0x65, 0x61, 0x74, 0x46, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65,
	0x61, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x61, 0x74,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x61,
	0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x22, 0xb7,
	0x02, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x75, 0x72, 0x65, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x12, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x41, 0x69, 0x72,
	0x70, 0x6f, 0x72, 0x74, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61,
	0x6c, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x10, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74,
	0x49, 0x44, 0x12, 0x40, 0x0a, 0x0d, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x65, 0x61, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x69,
	0x72, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x41,
	0x69, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x22, 0xca, 0x03, 0x0a, 0x14, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x10, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75,
	0x72, 0x65, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x52,
	0x10, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x36, 0x0a, 0x0e, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x41, 0x69, 0x72, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x52, 0x0e, 0x41, 0x72, 0x72, 0x69, 0x76,
	0x61, 0x6c, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x40, 0x0a, 0x0d, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x41,
	0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x41, 0x72,
	0x72, 0x69, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x74,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x07, 0x41, 0x69, 0x72, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x69,
	0x72, 0x6c, 0x69, 0x6e, 0x65, 0x46, 0x52, 0x07, 0x41, 0x69, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x7c, 0x0a, 0x08, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74,
	0x46, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x43, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43,
	0x69, 0x74, 0x79, 0x22, 0xe9, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x44, 0x12, 0x4e, 0x0a, 0x14, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x72, 0x72, 0x69,
	0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22,
	0x92, 0x05, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x3a, 0x0a, 0x10, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x41, 0x69, 0x72,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x52, 0x10, 0x44, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x36, 0x0a, 0x0e,
	0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x69, 0x72, 0x70,
	0x6f, 0x72, 0x74, 0x46, 0x52, 0x0e, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x41, 0x69, 0x72,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x40, 0x0a, 0x0d, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75,
	0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61,
	0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x53, 0x65, 0x61, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x4e, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x14, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x4a, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x72, 0x72, 0x69, 0x76,
	0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x07, 0x41, 0x69, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x69, 0x72,
	0x6c, 0x69, 0x6e, 0x65, 0x46, 0x52, 0x07, 0x41, 0x69, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x49, 0x44, 0x22, 0x68, 0x0a, 0x08, 0x41, 0x69, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x46,
	0x12, 0x20, 0x0a, 0x0b, 0x41, 0x69, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x69, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x69, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x69, 0x72, 0x6c, 0x69, 0x6e, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x32, 0xb3,
	0x02, 0x0a, 0x0d, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x45, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x19, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x52, 0x65, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x52, 0x65, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x61, 0x74, 0x73, 0x12, 0x1a, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x61,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0b, 0x5a, 0x09, 0x2f, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_flight_proto_rawDescOnce sync.Once
	file_api_proto_flight_proto_rawDescData = file_api_proto_flight_proto_rawDesc
)

func file_api_proto_flight_proto_rawDescGZIP() []byte {
	file_api_proto_flight_proto_rawDescOnce.Do(func() {
		file_api_proto_flight_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_flight_proto_rawDescData)
	})
	return file_api_proto_flight_proto_rawDescData
}

var file_api_proto_flight_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_proto_flight_proto_goTypes = []any{
	(*GetFlightRequest)(nil),         // 0: auth.GetFlightRequest
	(*GetFlightResponse)(nil),        // 1: auth.GetFlightResponse
	(*GetFlightSeatRequest)(nil),     // 2: auth.GetFlightSeatRequest
	(*GetFlightSeatResponse)(nil),    // 3: auth.GetFlightSeatResponse
	(*SeatF)(nil),                    // 4: auth.SeatF
	(*CreateFlightRequest)(nil),      // 5: auth.CreateFlightRequest
	(*CreateFlightResponse)(nil),     // 6: auth.CreateFlightResponse
	(*AirportF)(nil),                 // 7: auth.AirportF
	(*RescheduleFlightRequest)(nil),  // 8: auth.RescheduleFlightRequest
	(*RescheduleFlightResponse)(nil), // 9: auth.RescheduleFlightResponse
	(*AirlineF)(nil),                 // 10: auth.AirlineF
	(*timestamppb.Timestamp)(nil),    // 11: google.protobuf.Timestamp
}
var file_api_proto_flight_proto_depIdxs = []int32{
	9,  // 0: auth.GetFlightResponse.flights:type_name -> auth.RescheduleFlightResponse
	4,  // 1: auth.GetFlightSeatResponse.Seats:type_name -> auth.SeatF
	11, // 2: auth.CreateFlightRequest.DepartureTime:type_name -> google.protobuf.Timestamp
	11, // 3: auth.CreateFlightRequest.ArrivalTime:type_name -> google.protobuf.Timestamp
	7,  // 4: auth.CreateFlightResponse.DepartureAirport:type_name -> auth.AirportF
	7,  // 5: auth.CreateFlightResponse.ArrivalAirport:type_name -> auth.AirportF
	11, // 6: auth.CreateFlightResponse.DepartureTime:type_name -> google.protobuf.Timestamp
	11, // 7: auth.CreateFlightResponse.ArrivalTime:type_name -> google.protobuf.Timestamp
	10, // 8: auth.CreateFlightResponse.Airline:type_name -> auth.AirlineF
	11, // 9: auth.RescheduleFlightRequest.UpdatedDepartureTime:type_name -> google.protobuf.Timestamp
	11, // 10: auth.RescheduleFlightRequest.UpdatedArrivalTime:type_name -> google.protobuf.Timestamp
	7,  // 11: auth.RescheduleFlightResponse.DepartureAirport:type_name -> auth.AirportF
	7,  // 12: auth.RescheduleFlightResponse.ArrivalAirport:type_name -> auth.AirportF
	11, // 13: auth.RescheduleFlightResponse.DepartureTime:type_name -> google.protobuf.Timestamp
	11, // 14: auth.RescheduleFlightResponse.ArrivalTime:type_name -> google.protobuf.Timestamp
	11, // 15: auth.RescheduleFlightResponse.UpdatedDepartureTime:type_name -> google.protobuf.Timestamp
	11, // 16: auth.RescheduleFlightResponse.UpdatedArrivalTime:type_name -> google.protobuf.Timestamp
	10, // 17: auth.RescheduleFlightResponse.Airline:type_name -> auth.AirlineF
	5,  // 18: auth.FlightService.CreateFlight:input_type -> auth.CreateFlightRequest
	8,  // 19: auth.FlightService.RescheduleFlight:input_type -> auth.RescheduleFlightRequest
	2,  // 20: auth.FlightService.GetFlightSeats:input_type -> auth.GetFlightSeatRequest
	0,  // 21: auth.FlightService.GetFlights:input_type -> auth.GetFlightRequest
	6,  // 22: auth.FlightService.CreateFlight:output_type -> auth.CreateFlightResponse
	9,  // 23: auth.FlightService.RescheduleFlight:output_type -> auth.RescheduleFlightResponse
	3,  // 24: auth.FlightService.GetFlightSeats:output_type -> auth.GetFlightSeatResponse
	1,  // 25: auth.FlightService.GetFlights:output_type -> auth.GetFlightResponse
	22, // [22:26] is the sub-list for method output_type
	18, // [18:22] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_api_proto_flight_proto_init() }
func file_api_proto_flight_proto_init() {
	if File_api_proto_flight_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_flight_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetFlightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_flight_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetFlightResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_flight_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetFlightSeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_flight_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetFlightSeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_flight_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*SeatF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_flight_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CreateFlightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_flight_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CreateFlightResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_flight_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*AirportF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_flight_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*RescheduleFlightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_flight_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*RescheduleFlightResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_flight_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*AirlineF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_flight_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_flight_proto_goTypes,
		DependencyIndexes: file_api_proto_flight_proto_depIdxs,
		MessageInfos:      file_api_proto_flight_proto_msgTypes,
	}.Build()
	File_api_proto_flight_proto = out.File
	file_api_proto_flight_proto_rawDesc = nil
	file_api_proto_flight_proto_goTypes = nil
	file_api_proto_flight_proto_depIdxs = nil
}
